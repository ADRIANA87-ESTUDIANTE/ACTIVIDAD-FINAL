datos <-read_csv(archivo_csv)
archivo_csv   <-"Descargar salarios_mujeres(2).csv" # Reemplaza por tu archivo CSV
datos <-read_csv(archivo_csv)
library(dplyr)
library(dplyr)
library(readr)
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(readr)) install.packages("readr", dependencies = TRUE)
<-"Descargar salarios_mujeres(2).csv"
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
library(readr)
print("2. Cargando el dataset desde un archivo CSV...")
<-"Descargar salarios_mujeres(2).csv"
archivo_csv   <-"Descargar salarios_mujeres(2).csv"
datos <-read_csv(archivo_csv)
datos <-read.csv("salaraios_mujers(2).csv")
archivo_csv   <-"Descargar salariosmujeres.csv"
<-read.csv("salariosmujeres.csv")
datos <-read.csv("salariosmujeres.csv")
print("3. Explorando el dataset cargado...")
print("Primeras 6 filas del dataset:")
datos <-read.csv("salariosmujeres.csv")
datos <-read_csv("salariosmujeres.csv")
View(datos)
head(datos)
write.csv(datos,"datos-resultado.csv")
write.csv(datos,"datos-resultado.csv")
cat(el archivo "resultado.csv")
cat("el archivo "resultado.csv"ha sido guardado en el directio)
at("el archivo "resultado.csv"ha sido guardado en el directorio")
summary("datos")
summary("datos")
datos <-read_csv("salariosmujeres.csv"
summary("datos")
head(datos)
print("resumen datos")
summary("datos")
Summary(datos)
Summary(datos)
Summary(datos)
head(datos)
print("resumen datos")
print("datos")
datos <-read_csv("salariosmujeres.csv")
library(readr)  # Para leer archivos CSV
library(dplyr
library(readr)  # Para leer archivos CSV
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
print("2. Cargando el dataset desde un archivo CSV...")
archivo_csv   <-"Descargar salariosmujeres.csv" # Reemplaza por tu archivo CSV
datos <-read_csv("salariosmujeres.csv")
print("3, explorando el dataset cargado...")
head(datos)
print("primera 7 filas del dataset")
head(datos 7)
head(datos
#7)
print("informacion general del dataset:")
print("informacion general del dataset:")
str(datos) #estructura de los datos
print("nombre de las columnas")
names(datos)
print("resumen estadistico de las variables numericas")
summary(datos)
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
print("filas con valores na:")
datos[!complete.cases(datos),]
datos[!complete.cases(datos),]
datos[!complete.cases(datos),]
print("filas con valores na:")
datos[!complete.cases(datos),]
datos_limpios <-na.omit(datos)
datos_duplicados <-datos_limpios[!diplicated(datos_limpios)]
datos <-na.omit(datos)
print("filas con valores na:")
datos[!complete.cases(datos),]
print("filas con valores na:")
datos[!complete.cases(datos),]
datos <-na.omit(datos)
View(datos_limpios)
datos <-na.omit(datos)
write.csv(datos_limpios.csv)
write.csv(datos.csv)
write.csv(datos,"datos-limpios.csv")
datos_limpios <-na.omit(datos)
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios)]
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
summary(datos_sin_duplicados)
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","46"),]
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
variable_numerica <-names(datos)[sapply(datos,is,numeric)]
#histograma
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab:"edad salarial",
col = "pink", borde ="black",
break= 8
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab:"edad salarial",
col = "pink", borde ="black",
break= 8
#histograma
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab:"edad salarial",
col = "pink", border ="black",
break= 8
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab:"edad salarial",
col = "pink", border ="black",
breaks =  8
)
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab: "edad",
col = "pink", border ="black",
breaks =  8
)
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab: "Edad",
col = "pink", border ="black",
breaks =  8
)
hist(datos_filtrado$Edad,
main = "edad salarios(años)",
xlab: "Edad",
col = "pink", border ="black",
breaks =  8
)
hist(datos_sin_duplicados$Edad,
main = "edad salarios(años)",
xlab: "Edad",
col = "pink", border ="black",
breaks =  8
)
hist(datos$Edad,
main = "edad salarios(años)",
xlab: "Edad",
col = "pink", border ="black",
breaks =  8
)
names(datos_sin_duplicados)
hist(datos_sin_duplicados$Edad,
main = "distribucion edad (años)",
xlab = "edad",
col = "pink", border = "black",
breaks = 10
)
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
print("2. Cargando el dataset desde un archivo CSV...")
archivo_csv   <-"Descargar salariosmujeres.csv"
archivo_csv   <-"Descargar salariosmujeres.csv"
datos <-read_csv("salariosmujeres.csv")
print("3, explorando el dataset cargado...")
head(datos)
print("primera filas del dataset")
print("informacion general del dataset:")
str(datos) #estructura de los datos
print("nombre de las columnas")
names(datos)
print("resumen estadistico de las variables numericas")
summary(datos)
# ver valores faltantes (na)
print("identifica valores faltantes.... ")
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
datos_limpios <-na.omit(datos)
#guardar archivo csv limpio
write.csv(datos,"datos-limpios.csv")
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
#ver resumen de datos sin duplicados
summary(datos_sin_duplicados)
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
names(datos_sin_duplicados)
hist(datos_sin_duplicados$Edad,
main = "distribucion edad (años)",
xlab = "edad",
col = "pink", border = "black",
breaks = 10
)
install.packages("ggplot2")
library(ggplot2)
Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "skyblue", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "skyblue", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[2]]], main = paste("Histograma de", variables_numericas[2]), col = "skyblue", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[2]]], main = paste("Histograma de", variables_numericas[2]), col = "skyblue", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[2]))
hist(datos[[variables_numericas[2]]], main = paste("Histograma de", variables_numericas[2]), col = "skyblue", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "purple", border = "black")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "purple", border = "blue")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "purple", border = "blue")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
# Cargar paquetes
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
# 2️ CARGAR DATOS DESDE UN ARCHIVO CSV ----
print("2. Cargando el dataset desde un archivo CSV...")
# Especifica la ruta del archivo CSV (asegúrate de cambiar "salario_mujeres(2)" por el nombre real del archivo)
archivo_csv   <-"Descargar salariosmujeres.csv" # Reemplaza por tu archivo CSV
# Cargar datos en un data frame
datos <-read_csv("salariosmujeres.csv")
#revisar el dataset
print("3, explorando el dataset cargado...")
head(datos)
#ver la primeras fila
print("primera filas del dataset")
#informacion general del data set
print("informacion general del dataset:")
str(datos) #estructura de los datos
#nombre columnas
print("nombre de las columnas")
names(datos)
#resumen estadistico del dataset
print("resumen estadistico de las variables numericas")
summary(datos)
# ver valores faltantes (na)
print("identifica valores faltantes.... ")
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
#eliminar valores faltantes
datos_limpios <-na.omit(datos)
#guardar archivo csv limpio
write.csv(datos,"datos-limpios.csv")
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
#ver resumen de datos sin duplicados
summary(datos_sin_duplicados)
#ver las primeras filas de datos limpios
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
names(datos_sin_duplicados)
## VISUALIZACION BASICA DE UNA VARIABLE
print("CREANDO UNA VISUALIZACION BASICA DE UNA VARIABLE")
install.packages("ggplot2")
library(ggplot2)
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "purple", border = "blue")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
# 2️ CARGAR DATOS DESDE UN ARCHIVO CSV ----
print("2. Cargando el dataset desde un archivo CSV...")
# Especifica la ruta del archivo CSV (asegúrate de cambiar "salario_mujeres(2)" por el nombre real del archivo)
archivo_csv   <-"Descargar salariosmujeres.csv" # Reemplaza por tu archivo CSV
# Cargar datos en un data frame
datos <-read_csv("salariosmujeres.csv")
#revisar el dataset
print("3, explorando el dataset cargado...")
head(datos)
#ver la primeras fila
print("primera filas del dataset")
#informacion general del data set
print("informacion general del dataset:")
str(datos) #estructura de los datos
#nombre columnas
print("nombre de las columnas")
names(datos)
#resumen estadistico del dataset
print("resumen estadistico de las variables numericas")
summary(datos)
# ver valores faltantes (na)
print("identifica valores faltantes.... ")
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
#eliminar valores faltantes
datos_limpios <-na.omit(datos)
#guardar archivo csv limpio
write.csv(datos,"datos-limpios.csv")
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
#ver resumen de datos sin duplicados
summary(datos_sin_duplicados)
#ver las primeras filas de datos limpios
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
names(datos_sin_duplicados)
media <-mean(datos_sin_duplicados)
# Cargar paquetes
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
# 2️ CARGAR DATOS DESDE UN ARCHIVO CSV ----
print("2. Cargando el dataset desde un archivo CSV...")
# Especifica la ruta del archivo CSV (asegúrate de cambiar "salario_mujeres(2)" por el nombre real del archivo)
archivo_csv   <-"Descargar salariosmujeres.csv" # Reemplaza por tu archivo CSV
# Cargar datos en un data frame
datos <-read_csv("salariosmujeres.csv")
#revisar el dataset
print("3, explorando el dataset cargado...")
head(datos)
#ver la primeras fila
print("primera filas del dataset")
#informacion general del data set
print("informacion general del dataset:")
str(datos) #estructura de los datos
#nombre columnas
print("nombre de las columnas")
names(datos)
#resumen estadistico del dataset
print("resumen estadistico de las variables numericas")
summary(datos)
# ver valores faltantes (na)
print("identifica valores faltantes.... ")
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
#eliminar valores faltantes
datos_limpios <-na.omit(datos)
#guardar archivo csv limpio
write.csv(datos,"datos-limpios.csv")
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
#ver resumen de datos sin duplicados
summary(datos_sin_duplicados)
#ver las primeras filas de datos limpios
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
names(datos_sin_duplicados)
## VISUALIZACION BASICA DE UNA VARIABLE
print("CREANDO UNA VISUALIZACION BASICA DE UNA VARIABLE")
install.packages("ggplot2")
library(ggplot2)
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "purple", border = "blue")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
##Verificar si hay variables numéricas
variables_numericas <- names(datos_sin_duplicados)[sapply(datos_sin_duplicados, is.numeric)]
if (length(variables_numericas) > 0) {
print(paste("📈 Se genera un histograma de la variable:", variables_numericas[1]))
hist(datos[[variables_numericas[1]]], main = paste("Histograma de", variables_numericas[1]), col = "yellow", border = "blue")
} else {
print("No hay variables numéricas en el dataset para graficar.")
}
summary(datos_sin_duplicados)
#calculo media
media <-median(datos_sin_duplicados)
media <-median(datos)
library(readr)  # Para leer archivos CSV
library(dplyr)  # Para manipulación de datos
if (!require(readr)) install.packages("readr", dependencies = TRUE)
if (!require(dplyr)) install.packages("dplyr", dependencies = TRUE)
# 2️ CARGAR DATOS DESDE UN ARCHIVO CSV ----
print("2. Cargando el dataset desde un archivo CSV...")
# Especifica la ruta del archivo CSV (asegúrate de cambiar "salario_mujeres(2)" por el nombre real del archivo)
archivo_csv   <-"Descargar salariosmujeres.csv" # Reemplaza por tu archivo CSV
# Cargar datos en un data frame
datos <-read_csv("salariosmujeres.csv")
#revisar el dataset
print("3, explorando el dataset cargado...")
head(datos)
#ver la primeras fila
print("primera filas del dataset")
#informacion general del data set
print("informacion general del dataset:")
str(datos) #estructura de los datos
#nombre columnas
print("nombre de las columnas")
names(datos)
#resumen estadistico del dataset
print("resumen estadistico de las variables numericas")
summary(datos)
# ver valores faltantes (na)
print("identifica valores faltantes.... ")
#ver cuantos valores faltan por columnas
print("numero de valores na por columna:")
colSums(is.na(datos))
#mostrar las filas con valores faltante
print("filas con valores na:")
datos[!complete.cases(datos),]
#eliminar valores faltantes
datos_limpios <-na.omit(datos)
#guardar archivo csv limpio
write.csv(datos,"datos-limpios.csv")
#eliminar registros duplicados
datos_sin_duplicados <-datos_limpios[!duplicated(datos_limpios),]
#ver resumen de datos sin duplicados
summary(datos_sin_duplicados)
#ver las primeras filas de datos limpios
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
names(datos_sin_duplicados)
media <-mean(datos_sin_duplicados)
media <-mean(datos)
names(datos_sin_duplicados)
media <-mean(datos_limpios)
#calculo de la media
media <-mean(datos_limpios)
print(paste("la media es: ",media))
#calculo de la mediana
mediana <-median(datos_sin_duplicados)
#calculo de la mediana
mediana <-median(datos_limpios)
#calculo de la mediana
mediana <-median(datos)
#resumen estadistico del dataset
print("resumen estadistico de las variables numericas")
summary(datos)
#ver resumen de datos sin duplicados
print("resumen estadistico de las variables numericas sin duplicados")
summary(datos_sin_duplicados)
head(datos_sin_duplicados)
#filtrado de datos edad
datos_filtrado  <-datos_sin_duplicados[datos_sin_duplicados$Edad %in%c("35","60"),]
